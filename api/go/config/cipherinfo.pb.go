// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cipherinfo.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Security Key Exchange Method
type KeyExchangeScheme int32

const (
	KeyExchangeScheme_KEA_NONE KeyExchangeScheme = 0
	KeyExchangeScheme_KEA_ECDH KeyExchangeScheme = 1
)

var KeyExchangeScheme_name = map[int32]string{
	0: "KEA_NONE",
	1: "KEA_ECDH",
}

var KeyExchangeScheme_value = map[string]int32{
	"KEA_NONE": 0,
	"KEA_ECDH": 1,
}

func (x KeyExchangeScheme) String() string {
	return proto.EnumName(KeyExchangeScheme_name, int32(x))
}

func (KeyExchangeScheme) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d32c1c7154980027, []int{0}
}

// Encryption Scheme for Cipher Payload
type EncryptionScheme int32

const (
	EncryptionScheme_SA_NONE        EncryptionScheme = 0
	EncryptionScheme_SA_AES_256_CFB EncryptionScheme = 1
)

var EncryptionScheme_name = map[int32]string{
	0: "SA_NONE",
	1: "SA_AES_256_CFB",
}

var EncryptionScheme_value = map[string]int32{
	"SA_NONE":        0,
	"SA_AES_256_CFB": 1,
}

func (x EncryptionScheme) String() string {
	return proto.EnumName(EncryptionScheme_name, int32(x))
}

func (EncryptionScheme) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d32c1c7154980027, []int{1}
}

type CipherInfo struct {
	Id                string            `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	KeyExchangeScheme KeyExchangeScheme `protobuf:"varint,1,opt,name=keyExchangeScheme,proto3,enum=KeyExchangeScheme" json:"keyExchangeScheme,omitempty"`
	EncryptionScheme  EncryptionScheme  `protobuf:"varint,2,opt,name=encryptionScheme,proto3,enum=EncryptionScheme" json:"encryptionScheme,omitempty"`
	// Initial Value for ECDH computation
	InitialValue []byte `protobuf:"bytes,3,opt,name=initialValue,proto3" json:"initialValue,omitempty"`
	// controller provided public certificate
	PublicCert []byte `protobuf:"bytes,4,opt,name=publicCert,proto3" json:"publicCert,omitempty"`
	// sha of the public certificate
	Sha256 string `protobuf:"bytes,5,opt,name=sha256,proto3" json:"sha256,omitempty"`
	// signature for the sha
	Signature            []byte   `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CipherInfo) Reset()         { *m = CipherInfo{} }
func (m *CipherInfo) String() string { return proto.CompactTextString(m) }
func (*CipherInfo) ProtoMessage()    {}
func (*CipherInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d32c1c7154980027, []int{0}
}

func (m *CipherInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipherInfo.Unmarshal(m, b)
}
func (m *CipherInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipherInfo.Marshal(b, m, deterministic)
}
func (m *CipherInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipherInfo.Merge(m, src)
}
func (m *CipherInfo) XXX_Size() int {
	return xxx_messageInfo_CipherInfo.Size(m)
}
func (m *CipherInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CipherInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CipherInfo proto.InternalMessageInfo

func (m *CipherInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CipherInfo) GetKeyExchangeScheme() KeyExchangeScheme {
	if m != nil {
		return m.KeyExchangeScheme
	}
	return KeyExchangeScheme_KEA_NONE
}

func (m *CipherInfo) GetEncryptionScheme() EncryptionScheme {
	if m != nil {
		return m.EncryptionScheme
	}
	return EncryptionScheme_SA_NONE
}

func (m *CipherInfo) GetInitialValue() []byte {
	if m != nil {
		return m.InitialValue
	}
	return nil
}

func (m *CipherInfo) GetPublicCert() []byte {
	if m != nil {
		return m.PublicCert
	}
	return nil
}

func (m *CipherInfo) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

func (m *CipherInfo) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterEnum("KeyExchangeScheme", KeyExchangeScheme_name, KeyExchangeScheme_value)
	proto.RegisterEnum("EncryptionScheme", EncryptionScheme_name, EncryptionScheme_value)
	proto.RegisterType((*CipherInfo)(nil), "CipherInfo")
}

func init() { proto.RegisterFile("cipherinfo.proto", fileDescriptor_d32c1c7154980027) }

var fileDescriptor_d32c1c7154980027 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x4d, 0xd4, 0x6a, 0xaf, 0xa5, 0xa4, 0xb3, 0x90, 0x2c, 0x44, 0x4b, 0x71, 0x51, 0x0a,
	0x26, 0xd0, 0xd2, 0xee, 0x04, 0xdb, 0x18, 0x7f, 0x28, 0x54, 0x48, 0xc0, 0x85, 0x9b, 0x90, 0xce,
	0xdc, 0x24, 0x17, 0xd3, 0x99, 0x90, 0x26, 0xc5, 0xfa, 0x22, 0xbe, 0xae, 0x10, 0xeb, 0x5f, 0xbb,
	0xbc, 0xdf, 0xf9, 0xe6, 0xc0, 0x61, 0xc0, 0xe0, 0x94, 0x25, 0x98, 0x93, 0x8c, 0x94, 0x95, 0xe5,
	0xaa, 0x50, 0x9d, 0x0f, 0x1d, 0xc0, 0xa9, 0xe0, 0xa3, 0x8c, 0x14, 0x6b, 0x82, 0x4e, 0xc2, 0x14,
	0x6d, 0xad, 0x5b, 0xf7, 0x74, 0x12, 0xec, 0x06, 0x5a, 0xaf, 0xb8, 0x76, 0xdf, 0x78, 0x12, 0xca,
	0x18, 0x7d, 0x9e, 0xe0, 0x02, 0x4d, 0xad, 0xad, 0x75, 0x9b, 0x7d, 0x66, 0x4d, 0xb7, 0x13, 0x6f,
	0x57, 0x66, 0xd7, 0x60, 0xa0, 0xe4, 0xf9, 0x3a, 0x2b, 0x48, 0xc9, 0x4d, 0x81, 0x5e, 0x15, 0xb4,
	0x2c, 0x77, 0x2b, 0xf0, 0x76, 0x54, 0xd6, 0x81, 0x06, 0x49, 0x2a, 0x28, 0x4c, 0x9f, 0xc3, 0xb4,
	0x44, 0x73, 0xbf, 0xad, 0x75, 0x1b, 0xde, 0x3f, 0xc6, 0xce, 0x01, 0xb2, 0x72, 0x9e, 0x12, 0x77,
	0x30, 0x2f, 0xcc, 0x83, 0xca, 0xf8, 0x43, 0xd8, 0x29, 0xd4, 0x96, 0x49, 0xd8, 0x1f, 0x8e, 0xcc,
	0xc3, 0x6a, 0xd8, 0xe6, 0x62, 0x67, 0x50, 0x5f, 0x52, 0x2c, 0xc3, 0xa2, 0xcc, 0xd1, 0xac, 0x55,
	0xcf, 0x7e, 0x41, 0xcf, 0x86, 0xd6, 0xce, 0x40, 0xd6, 0x80, 0xe3, 0xa9, 0x3b, 0x0e, 0x66, 0x4f,
	0x33, 0xd7, 0xd8, 0xfb, 0xbe, 0x5c, 0xe7, 0xf6, 0xc1, 0xd0, 0x7a, 0x03, 0x30, 0xb6, 0x07, 0xb1,
	0x13, 0x38, 0xf2, 0x7f, 0x74, 0x06, 0x4d, 0x7f, 0x1c, 0x8c, 0x5d, 0x3f, 0xe8, 0x0f, 0x47, 0x81,
	0x73, 0x37, 0x31, 0xb4, 0xc9, 0x3d, 0x5c, 0x70, 0xb5, 0xb0, 0xde, 0x51, 0xa0, 0x08, 0x2d, 0x9e,
	0xaa, 0x52, 0x58, 0xe5, 0x12, 0xf3, 0x15, 0x71, 0xfc, 0xfa, 0xa2, 0x97, 0xcb, 0x98, 0x8a, 0xa4,
	0x9c, 0x5b, 0x5c, 0x2d, 0xec, 0x34, 0xba, 0x42, 0x11, 0xa3, 0x8d, 0x2b, 0xb4, 0xc3, 0x8c, 0xec,
	0x58, 0xd9, 0x5c, 0xc9, 0x88, 0xe2, 0x79, 0xad, 0x92, 0x07, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x85, 0xb7, 0xef, 0x79, 0xe3, 0x01, 0x00, 0x00,
}
