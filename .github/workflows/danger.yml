---
name: Publish PR build
on:
  workflow_run:
    workflows:
      - "PR build"
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        arch: [arm64,amd64] 
        hv: [xen, kvm]
    env:
      RUN_ID : ${{ github.event.workflow_run.id }}
    steps:
      - name: Find PR build artifact 
        id: find-pr-artifact
        env:
          ARCH: ${{ matrix.arch }}
          HV: ${{ matrix.hv }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run --repo ${{ github.repository }} download ${RUN_ID} -n eve-${HV}-${ARCH}

      - name: Display structure of downloaded files
        run: ls -R

      - name: Publish EVE 
        env:
            ARCH: ${{ matrix.arch }}
            HV: ${{ matrix.hv }}
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" |\
             docker login -u evebuild --password-stdin 
          
          for i in `docker load --input eve-${HV}-${ARCH}.tar | sed -e 's#^Loaded image:##'`; do
            docker push "$i"
            IMGS="$IMGS ${i}"
          done

          for i in $(echo "$IMGS" | tr ' ' '\012' | sort -u); do
             docker manifest create "$i" --amend "$i" 
             docker manifest push "$i"
          done