From aa51482978389622abadf5c77cfe5fef0a6c5110 Mon Sep 17 00:00:00 2001
From: Allan Jude <allan@klarasystems.com>
Date: Tue, 21 Dec 2021 16:08:51 -0500
Subject: [PATCH 2/7] Fix TRIM tests

Do a sync before checking how much space was used
Make sure fill_mb is at least VDEV_MAX_MB or the test will fail

Signed-off-by: Allan Jude <allan@klarasystems.com>
Sponsored-by: Zededa Inc.
---
 .../tests/functional/trim/autotrim_config.ksh          |  8 ++++++++
 tests/zfs-tests/tests/functional/trim/trim_config.ksh  | 10 +++++++++-
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/tests/zfs-tests/tests/functional/trim/autotrim_config.ksh b/tests/zfs-tests/tests/functional/trim/autotrim_config.ksh
index 924b56935..5de97bd10 100755
--- a/tests/zfs-tests/tests/functional/trim/autotrim_config.ksh
+++ b/tests/zfs-tests/tests/functional/trim/autotrim_config.ksh
@@ -92,13 +92,21 @@ for type in "" "mirror" "raidz2" "draid"; do
 
 	typeset availspace=$(get_prop available $TESTPOOL)
 	typeset fill_mb=$(( floor(availspace * 0.90 / 1024 / 1024) ))
+	# We can't fill less than VDEV_MAX_MB and expect the vdev to be full
+	if [[ $fill_mb -lt $VDEV_MAX_MB ]]; then
+		fill_mb=$VDEV_MAX_MB
+	fi
 
 	# Fill the pool, verify the vdevs are no longer sparse.
 	file_write -o create -f /$TESTPOOL/file -b 1048576 -c $fill_mb -d R
+	sync_pool $TESTPOOL
+	sync
 	verify_vdevs "-ge" "$VDEV_MAX_MB" $VDEVS
 
 	# Remove the file, wait for trim, verify the vdevs are now sparse.
 	log_must rm /$TESTPOOL/file
+	sync_pool $TESTPOOL
+	sync
 	wait_trim_io $TESTPOOL "ind" 64
 	verify_vdevs "-le" "$VDEV_MIN_MB" $VDEVS
 
diff --git a/tests/zfs-tests/tests/functional/trim/trim_config.ksh b/tests/zfs-tests/tests/functional/trim/trim_config.ksh
index 9a6e19e1c..958e03e48 100755
--- a/tests/zfs-tests/tests/functional/trim/trim_config.ksh
+++ b/tests/zfs-tests/tests/functional/trim/trim_config.ksh
@@ -82,7 +82,7 @@ for type in "" "mirror" "raidz2" "draid"; do
 		VDEVS="$TRIM_VDEV1 $TRIM_VDEV2 $TRIM_VDEV3 $TRIM_VDEV4"
 
 		# The per-vdev utilization is lower due to the capacity
-		# resilverd for the distributed spare.
+		# reserved for the distributed spare.
 		VDEV_MAX_MB=$(( floor(4 * MINVDEVSIZE * 0.50 / 1024 / 1024) ))
 	fi
 
@@ -91,13 +91,21 @@ for type in "" "mirror" "raidz2" "draid"; do
 
 	typeset availspace=$(get_prop available $TESTPOOL)
 	typeset fill_mb=$(( floor(availspace * 0.90 / 1024 / 1024) ))
+	# We can't fill less than VDEV_MAX_MB and expect the vdev to be full
+	if [[ $fill_mb -lt $VDEV_MAX_MB ]]; then
+		fill_mb=$VDEV_MAX_MB
+	fi
 
 	# Fill the pool, verify the vdevs are no longer sparse.
 	file_write -o create -f /$TESTPOOL/file -b 1048576 -c $fill_mb -d R
+	sync_pool $TESTPOOL
+	sync
 	verify_vdevs "-ge" "$VDEV_MAX_MB" $VDEVS
 
 	# Remove the file, issue trim, verify the vdevs are now sparse.
 	log_must rm /$TESTPOOL/file
+	sync_pool $TESTPOOL
+	sync
 	log_must timeout 120 zpool trim -w $TESTPOOL
 	verify_vdevs "-le" "$VDEV_MIN_MB" $VDEVS
 
-- 
2.25.1

