From 765b92c12bfbfe813c06ba23f942d64f2893156f Mon Sep 17 00:00:00 2001
From: Allan Jude <allan@klarasystems.com>
Date: Thu, 14 Oct 2021 15:50:49 +0000
Subject: [PATCH 6/7] Calculate the worst case allocation inflation

Instead of using a static formula of:
  (VDEV_RAIDZ_MAXPARITY + 1) * SPA_DVAS_PER_BP == 12

When adding/opening a vdev, set spa->spa_worst_alloc to the worst case
for the worst vdev in the pool.

This will lower the excessive inflation for pools that are simple
spripes or mirror sets.

Is it possible that for dRAID the static formula is not enough?

Sponsored-by: Zededa Inc.
Sponsored-by: Klara Inc.
Signed-off-by: Allan Jude <allan@klarasystems.com>
---
 include/sys/spa_impl.h            |  1 +
 include/sys/vdev_impl.h           |  3 +++
 module/os/freebsd/zfs/vdev_file.c |  2 ++
 module/os/freebsd/zfs/vdev_geom.c |  1 +
 module/os/linux/zfs/vdev_disk.c   |  1 +
 module/os/linux/zfs/vdev_file.c   |  2 ++
 module/zfs/spa_misc.c             |  3 ++-
 module/zfs/vdev.c                 | 22 ++++++++++++++++++++++
 module/zfs/vdev_draid.c           | 12 ++++++++++++
 module/zfs/vdev_indirect.c        |  1 +
 module/zfs/vdev_mirror.c          |  3 +++
 module/zfs/vdev_missing.c         |  2 ++
 module/zfs/vdev_raidz.c           | 15 +++++++++++++++
 module/zfs/vdev_root.c            |  1 +
 14 files changed, 68 insertions(+), 1 deletion(-)

diff --git a/include/sys/spa_impl.h b/include/sys/spa_impl.h
index cb2c49e58..ce8f4f755 100644
--- a/include/sys/spa_impl.h
+++ b/include/sys/spa_impl.h
@@ -249,6 +249,7 @@ struct spa {
 	uint64_t	spa_min_ashift;		/* of vdevs in normal class */
 	uint64_t	spa_max_ashift;		/* of vdevs in normal class */
 	uint64_t	spa_min_alloc;		/* of vdevs in normal class */
+	uint64_t	spa_worst_alloc;	/* of vdevs in normal class */
 	uint64_t	spa_config_guid;	/* config pool guid */
 	uint64_t	spa_load_guid;		/* spa_load initialized guid */
 	uint64_t	spa_last_synced_guid;	/* last synced guid */
diff --git a/include/sys/vdev_impl.h b/include/sys/vdev_impl.h
index 3cfde40a7..d51e60846 100644
--- a/include/sys/vdev_impl.h
+++ b/include/sys/vdev_impl.h
@@ -76,6 +76,7 @@ typedef void	vdev_close_func_t(vdev_t *vd);
 typedef uint64_t vdev_asize_func_t(vdev_t *vd, uint64_t psize);
 typedef uint64_t vdev_min_asize_func_t(vdev_t *vd);
 typedef uint64_t vdev_min_alloc_func_t(vdev_t *vd);
+typedef uint64_t vdev_worst_alloc_func_t(vdev_t *vd);
 typedef void	vdev_io_start_func_t(zio_t *zio);
 typedef void	vdev_io_done_func_t(zio_t *zio);
 typedef void	vdev_state_change_func_t(vdev_t *vd, int, int);
@@ -110,6 +111,7 @@ typedef const struct vdev_ops {
 	vdev_asize_func_t		*vdev_op_asize;
 	vdev_min_asize_func_t		*vdev_op_min_asize;
 	vdev_min_alloc_func_t		*vdev_op_min_alloc;
+	vdev_worst_alloc_func_t		*vdev_op_worst_alloc;
 	vdev_io_start_func_t		*vdev_op_io_start;
 	vdev_io_done_func_t		*vdev_op_io_done;
 	vdev_state_change_func_t	*vdev_op_state_change;
@@ -618,6 +620,7 @@ extern uint64_t vdev_default_min_asize(vdev_t *vd);
 extern uint64_t vdev_get_min_asize(vdev_t *vd);
 extern void vdev_set_min_asize(vdev_t *vd);
 extern uint64_t vdev_get_min_alloc(vdev_t *vd);
+extern uint64_t vdev_get_worst_alloc(vdev_t *vd);
 extern uint64_t vdev_get_nparity(vdev_t *vd);
 extern uint64_t vdev_get_ndisks(vdev_t *vd);
 
diff --git a/module/os/freebsd/zfs/vdev_file.c b/module/os/freebsd/zfs/vdev_file.c
index fc04a7476..9b7f29004 100644
--- a/module/os/freebsd/zfs/vdev_file.c
+++ b/module/os/freebsd/zfs/vdev_file.c
@@ -300,6 +300,7 @@ vdev_ops_t vdev_file_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_file_io_start,
 	.vdev_op_io_done = vdev_file_io_done,
 	.vdev_op_state_change = NULL,
@@ -330,6 +331,7 @@ vdev_ops_t vdev_disk_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_file_io_start,
 	.vdev_op_io_done = vdev_file_io_done,
 	.vdev_op_state_change = NULL,
diff --git a/module/os/freebsd/zfs/vdev_geom.c b/module/os/freebsd/zfs/vdev_geom.c
index 2ef4811a8..a2222ae5b 100644
--- a/module/os/freebsd/zfs/vdev_geom.c
+++ b/module/os/freebsd/zfs/vdev_geom.c
@@ -1306,6 +1306,7 @@ vdev_ops_t vdev_disk_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_geom_io_start,
 	.vdev_op_io_done = vdev_geom_io_done,
 	.vdev_op_state_change = NULL,
diff --git a/module/os/linux/zfs/vdev_disk.c b/module/os/linux/zfs/vdev_disk.c
index a432a7364..f871377ad 100644
--- a/module/os/linux/zfs/vdev_disk.c
+++ b/module/os/linux/zfs/vdev_disk.c
@@ -882,6 +882,7 @@ vdev_ops_t vdev_disk_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_disk_io_start,
 	.vdev_op_io_done = vdev_disk_io_done,
 	.vdev_op_state_change = NULL,
diff --git a/module/os/linux/zfs/vdev_file.c b/module/os/linux/zfs/vdev_file.c
index bf8a13ae6..1906f7fb6 100644
--- a/module/os/linux/zfs/vdev_file.c
+++ b/module/os/linux/zfs/vdev_file.c
@@ -312,6 +312,7 @@ vdev_ops_t vdev_file_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_file_io_start,
 	.vdev_op_io_done = vdev_file_io_done,
 	.vdev_op_state_change = NULL,
@@ -357,6 +358,7 @@ vdev_ops_t vdev_disk_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_file_io_start,
 	.vdev_op_io_done = vdev_file_io_done,
 	.vdev_op_state_change = NULL,
diff --git a/module/zfs/spa_misc.c b/module/zfs/spa_misc.c
index d971b8a31..6bc7e5dd2 100644
--- a/module/zfs/spa_misc.c
+++ b/module/zfs/spa_misc.c
@@ -1765,7 +1765,8 @@ spa_get_worst_case_asize(spa_t *spa, uint64_t lsize)
 {
 	if (lsize == 0)
 		return (0);	/* No inflation needed */
-	return (MAX(lsize, 1 << spa->spa_max_ashift) * spa_asize_inflation);
+	return (MAX(lsize, 1 << spa->spa_max_ashift)
+	    * MIN(spa->spa_worst_alloc, spa_asize_inflation));
 }
 
 /*
diff --git a/module/zfs/vdev.c b/module/zfs/vdev.c
index d659ec5bf..fe8be9bd2 100644
--- a/module/zfs/vdev.c
+++ b/module/zfs/vdev.c
@@ -365,6 +365,20 @@ vdev_get_min_alloc(vdev_t *vd)
 	return (min_alloc);
 }
 
+/*
+ * Get the worst case allocation size for the top-level vdev.
+ */
+uint64_t
+vdev_get_worst_alloc(vdev_t *vd)
+{
+	uint64_t worst_alloc = 1;
+
+	if (vd->vdev_ops->vdev_op_worst_alloc != NULL)
+		worst_alloc = vd->vdev_ops->vdev_op_worst_alloc(vd);
+
+	return (worst_alloc);
+}
+
 /*
  * Get the parity level for a top-level vdev.
  */
@@ -1390,6 +1404,10 @@ vdev_metaslab_group_create(vdev_t *vd)
 			uint64_t min_alloc = vdev_get_min_alloc(vd);
 			if (min_alloc < spa->spa_min_alloc)
 				spa->spa_min_alloc = min_alloc;
+
+			uint64_t worst_alloc = vdev_get_worst_alloc(vd);
+			if (worst_alloc > spa->spa_worst_alloc)
+				spa->spa_worst_alloc = worst_alloc;
 		}
 	}
 }
@@ -2128,6 +2146,10 @@ vdev_open(vdev_t *vd)
 		uint64_t min_alloc = vdev_get_min_alloc(vd);
 		if (min_alloc < spa->spa_min_alloc)
 			spa->spa_min_alloc = min_alloc;
+
+		uint64_t worst_alloc = vdev_get_worst_alloc(vd);
+		if (worst_alloc > spa->spa_worst_alloc)
+			spa->spa_worst_alloc = worst_alloc;
 	}
 
 	/*
diff --git a/module/zfs/vdev_draid.c b/module/zfs/vdev_draid.c
index b8f82d52e..d05213cc2 100644
--- a/module/zfs/vdev_draid.c
+++ b/module/zfs/vdev_draid.c
@@ -1150,6 +1150,16 @@ vdev_draid_min_alloc(vdev_t *vd)
 	return (vdc->vdc_ndata << vd->vdev_ashift);
 }
 
+static uint64_t
+vdev_draid_worst_alloc(vdev_t *vd)
+{
+	vdev_draid_config_t *vdc = vd->vdev_tsd;
+
+	ASSERT3P(vd->vdev_ops, ==, &vdev_draid_ops);
+
+	return (vdc->vdc_groupwidth);
+}
+
 /*
  * Returns true if the txg range does not exist on any leaf vdev.
  *
@@ -2271,6 +2281,7 @@ vdev_ops_t vdev_draid_ops = {
 	.vdev_op_asize = vdev_draid_asize,
 	.vdev_op_min_asize = vdev_draid_min_asize,
 	.vdev_op_min_alloc = vdev_draid_min_alloc,
+	.vdev_op_worst_alloc = vdev_draid_worst_alloc,
 	.vdev_op_io_start = vdev_draid_io_start,
 	.vdev_op_io_done = vdev_draid_io_done,
 	.vdev_op_state_change = vdev_draid_state_change,
@@ -2766,6 +2777,7 @@ vdev_ops_t vdev_draid_spare_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_draid_spare_io_start,
 	.vdev_op_io_done = vdev_draid_spare_io_done,
 	.vdev_op_state_change = NULL,
diff --git a/module/zfs/vdev_indirect.c b/module/zfs/vdev_indirect.c
index 3237dc402..e2ec29ed9 100644
--- a/module/zfs/vdev_indirect.c
+++ b/module/zfs/vdev_indirect.c
@@ -1861,6 +1861,7 @@ vdev_ops_t vdev_indirect_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_indirect_io_start,
 	.vdev_op_io_done = vdev_indirect_io_done,
 	.vdev_op_state_change = NULL,
diff --git a/module/zfs/vdev_mirror.c b/module/zfs/vdev_mirror.c
index 5eb331046..9806419cd 100644
--- a/module/zfs/vdev_mirror.c
+++ b/module/zfs/vdev_mirror.c
@@ -894,6 +894,7 @@ vdev_ops_t vdev_mirror_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_mirror_io_start,
 	.vdev_op_io_done = vdev_mirror_io_done,
 	.vdev_op_state_change = vdev_mirror_state_change,
@@ -919,6 +920,7 @@ vdev_ops_t vdev_replacing_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_mirror_io_start,
 	.vdev_op_io_done = vdev_mirror_io_done,
 	.vdev_op_state_change = vdev_mirror_state_change,
@@ -944,6 +946,7 @@ vdev_ops_t vdev_spare_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_mirror_io_start,
 	.vdev_op_io_done = vdev_mirror_io_done,
 	.vdev_op_state_change = vdev_mirror_state_change,
diff --git a/module/zfs/vdev_missing.c b/module/zfs/vdev_missing.c
index e9145fd01..c16d67503 100644
--- a/module/zfs/vdev_missing.c
+++ b/module/zfs/vdev_missing.c
@@ -88,6 +88,7 @@ vdev_ops_t vdev_missing_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_missing_io_start,
 	.vdev_op_io_done = vdev_missing_io_done,
 	.vdev_op_state_change = NULL,
@@ -113,6 +114,7 @@ vdev_ops_t vdev_hole_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = vdev_missing_io_start,
 	.vdev_op_io_done = vdev_missing_io_done,
 	.vdev_op_state_change = NULL,
diff --git a/module/zfs/vdev_raidz.c b/module/zfs/vdev_raidz.c
index 1feebf708..fce11139a 100644
--- a/module/zfs/vdev_raidz.c
+++ b/module/zfs/vdev_raidz.c
@@ -1477,6 +1477,20 @@ vdev_raidz_min_asize(vdev_t *vd)
 	    vd->vdev_children);
 }
 
+/*
+ * When using RAIDz the worst case allocation size is determined by the level
+ * of parity in the redundancy group.
+ */
+static uint64_t
+vdev_raidz_worst_alloc(vdev_t *vd)
+{
+	vdev_raidz_t *vdrz = vd->vdev_tsd;
+
+	ASSERT3P(vd->vdev_ops, ==, &vdev_raidz_ops);
+
+	return (vdrz->vd_nparity + 1);
+}
+
 void
 vdev_raidz_child_done(zio_t *zio)
 {
@@ -2532,6 +2546,7 @@ vdev_ops_t vdev_raidz_ops = {
 	.vdev_op_asize = vdev_raidz_asize,
 	.vdev_op_min_asize = vdev_raidz_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = vdev_raidz_worst_alloc,
 	.vdev_op_io_start = vdev_raidz_io_start,
 	.vdev_op_io_done = vdev_raidz_io_done,
 	.vdev_op_state_change = vdev_raidz_state_change,
diff --git a/module/zfs/vdev_root.c b/module/zfs/vdev_root.c
index 45ddc2f71..abb9edc85 100644
--- a/module/zfs/vdev_root.c
+++ b/module/zfs/vdev_root.c
@@ -149,6 +149,7 @@ vdev_ops_t vdev_root_ops = {
 	.vdev_op_asize = vdev_default_asize,
 	.vdev_op_min_asize = vdev_default_min_asize,
 	.vdev_op_min_alloc = NULL,
+	.vdev_op_worst_alloc = NULL,
 	.vdev_op_io_start = NULL,	/* not applicable to the root */
 	.vdev_op_io_done = NULL,	/* not applicable to the root */
 	.vdev_op_state_change = vdev_root_state_change,
-- 
2.25.1

