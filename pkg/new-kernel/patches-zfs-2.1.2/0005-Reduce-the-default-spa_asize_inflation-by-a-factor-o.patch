From 507058638c521c9ea748fc43344560107d953441 Mon Sep 17 00:00:00 2001
From: Allan Jude <allan@klarasystems.com>
Date: Tue, 16 Nov 2021 23:11:00 +0000
Subject: [PATCH 5/7] Reduce the default spa_asize_inflation by a factor of 2

The formula included * 2 for possible dedup ditto blocks, a feature
that was was removed in: 050d720c43b6285fc0c30e1e97591f6b796dbd68

Sponsored-by: Zededa Inc.
Sponsored-by: Klara Inc.
Signed-off-by: Allan Jude <allan@klarasystems.com>
---
 module/zfs/spa_misc.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/module/zfs/spa_misc.c b/module/zfs/spa_misc.c
index 00515db02..d971b8a31 100644
--- a/module/zfs/spa_misc.c
+++ b/module/zfs/spa_misc.c
@@ -338,12 +338,10 @@ char *zfs_deadman_failmode = "wait";
  * The worst case is single-sector max-parity RAID-Z blocks, in which
  * case the space requirement is exactly (VDEV_RAIDZ_MAXPARITY + 1)
  * times the size; so just assume that.  Add to this the fact that
- * we can have up to 3 DVAs per bp, and one more factor of 2 because
- * the block may be dittoed with up to 3 DVAs by ddt_sync().  All together,
- * the worst case is:
- *     (VDEV_RAIDZ_MAXPARITY + 1) * SPA_DVAS_PER_BP * 2 == 24
+ * we can have up to 3 DVAs per bp.  All together, the worst case is:
+ *     (VDEV_RAIDZ_MAXPARITY + 1) * SPA_DVAS_PER_BP == 12
  */
-int spa_asize_inflation = 24;
+int spa_asize_inflation = 12;
 
 /*
  * Normally, we don't allow the last 3.2% (1/(2^spa_slop_shift)) of space in
-- 
2.25.1

