From eef0ec618956452e29f201be33388245b100f1a1 Mon Sep 17 00:00:00 2001
From: Vedant Paranjape <22630228+VedantParanjape@users.noreply.github.com>
Date: Thu, 14 Oct 2021 10:38:26 +0530
Subject: [PATCH 4/8] Add search_part_uuid and search_disk_uuid module

Signed-off-by: Vedant Paranjape <22630228+VedantParanjape@users.noreply.github.com>
---
 grub-core/Makefile.core.def           | 10 ++++++++++
 grub-core/commands/search_disk_uuid.c |  5 +++++
 grub-core/commands/search_part_uuid.c |  5 +++++
 grub-core/commands/search_wrap.c      | 12 ++++++++++++
 include/grub/search.h                 |  5 +++++
 5 files changed, 37 insertions(+)
 create mode 100644 grub-core/commands/search_disk_uuid.c
 create mode 100644 grub-core/commands/search_part_uuid.c

diff --git a/grub-core/Makefile.core.def b/grub-core/Makefile.core.def
index 25a274067..9d5736b4a 100644
--- a/grub-core/Makefile.core.def
+++ b/grub-core/Makefile.core.def
@@ -1083,11 +1083,21 @@ module = {
   common = commands/search_label.c;
 };
 
+module = {
+  name = search_part_uuid;
+  common = commands/search_part_uuid.c;
+};
+
 module = {
   name = search_part_label;
   common = commands/search_part_label.c;
 };
 
+module = {
+  name = search_disk_uuid;
+  common = commands/search_disk_uuid.c;
+};
+
 module = {
   name = setpci;
   common = commands/setpci.c;
diff --git a/grub-core/commands/search_disk_uuid.c b/grub-core/commands/search_disk_uuid.c
new file mode 100644
index 000000000..fba96f6b8
--- /dev/null
+++ b/grub-core/commands/search_disk_uuid.c
@@ -0,0 +1,5 @@
+#define DO_SEARCH_DISK_UUID 1
+#define FUNC_NAME grub_search_disk_uuid
+#define COMMAND_NAME "search.disk_uuid"
+#define HELP_MESSAGE N_("Search devices by disk UUID. If VARIABLE is specified, the first device found is set to a variable.")
+#include "search.c"
diff --git a/grub-core/commands/search_part_uuid.c b/grub-core/commands/search_part_uuid.c
new file mode 100644
index 000000000..2d1d3d0d7
--- /dev/null
+++ b/grub-core/commands/search_part_uuid.c
@@ -0,0 +1,5 @@
+#define DO_SEARCH_PART_UUID 1
+#define FUNC_NAME grub_search_part_uuid
+#define COMMAND_NAME "search.part_uuid"
+#define HELP_MESSAGE N_("Search devices by partition UUID. If VARIABLE is specified, the first device found is set to a variable.")
+#include "search.c"
diff --git a/grub-core/commands/search_wrap.c b/grub-core/commands/search_wrap.c
index ffa349add..fc149cd6b 100644
--- a/grub-core/commands/search_wrap.c
+++ b/grub-core/commands/search_wrap.c
@@ -38,6 +38,10 @@ static const struct grub_arg_option options[] =
      0, 0},
     {"part-label",	'L', 0, N_("Search devices by a partition label."),
      0, 0},
+    {"part-uuid",	'U', 0, N_("Search devices by a partition UUID."),
+     0, 0},
+    {"disk-uuid",	'U', 0, N_("Search devices by a disk UUID."),
+     0, 0},
     {"set",		's', GRUB_ARG_OPTION_OPTIONAL,
      N_("Set a variable to the first device found."), N_("VARNAME"),
      ARG_TYPE_STRING},
@@ -74,6 +78,8 @@ enum options
     SEARCH_LABEL,
     SEARCH_FS_UUID,
     SEARCH_PART_LABEL,
+    SEARCH_PART_UUID,
+    SEARCH_DISK_UUID,
     SEARCH_SET,
     SEARCH_NO_FLOPPY,
     SEARCH_HINT,
@@ -192,6 +198,12 @@ grub_cmd_search (grub_extcmd_context_t ctxt, int argc, char **args)
   else if (state[SEARCH_PART_LABEL].set)
     grub_search_part_label (id, var, state[SEARCH_NO_FLOPPY].set,
 			    hints, nhints);
+  else if (state[SEARCH_PART_UUID].set)
+    grub_search_part_uuid (id, var, state[SEARCH_NO_FLOPPY].set,
+			   hints, nhints);
+  else if (state[SEARCH_DISK_UUID].set)
+    grub_search_disk_uuid (id, var, state[SEARCH_NO_FLOPPY].set,
+			   hints, nhints);
   else if (state[SEARCH_FILE].set)
     grub_search_fs_file (id, var, state[SEARCH_NO_FLOPPY].set, 
 			 hints, nhints);
diff --git a/include/grub/search.h b/include/grub/search.h
index 9b83f515c..7f69d25d1 100644
--- a/include/grub/search.h
+++ b/include/grub/search.h
@@ -25,6 +25,11 @@ void grub_search_fs_uuid (const char *key, const char *var, int no_floppy,
 			  char **hints, unsigned nhints);
 void grub_search_label (const char *key, const char *var, int no_floppy,
 			char **hints, unsigned nhints);
+void grub_search_part_uuid (const char *key, const char *var, int no_floppy,
+			    char **hints, unsigned nhints);
 void grub_search_part_label (const char *key, const char *var, int no_floppy,
 			     char **hints, unsigned nhints);
+void grub_search_disk_uuid (const char *key, const char *var, int no_floppy,
+			    char **hints, unsigned nhints);
+
 #endif
-- 
2.25.1

