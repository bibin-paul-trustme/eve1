// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cipherinfo.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CryptoAlgorithm int32

const (
	CryptoAlgorithm_NONE CryptoAlgorithm = 0
	CryptoAlgorithm_ECDH CryptoAlgorithm = 1
)

var CryptoAlgorithm_name = map[int32]string{
	0: "NONE",
	1: "ECDH",
}

var CryptoAlgorithm_value = map[string]int32{
	"NONE": 0,
	"ECDH": 1,
}

func (x CryptoAlgorithm) String() string {
	return proto.EnumName(CryptoAlgorithm_name, int32(x))
}

func (CryptoAlgorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d32c1c7154980027, []int{0}
}

type CipherInfo struct {
	CAlgo                CryptoAlgorithm `protobuf:"varint,1,opt,name=cAlgo,proto3,enum=CryptoAlgorithm" json:"cAlgo,omitempty"`
	InitialValue         []byte          `protobuf:"bytes,2,opt,name=initialValue,proto3" json:"initialValue,omitempty"`
	PublicKey            []byte          `protobuf:"bytes,3,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CipherInfo) Reset()         { *m = CipherInfo{} }
func (m *CipherInfo) String() string { return proto.CompactTextString(m) }
func (*CipherInfo) ProtoMessage()    {}
func (*CipherInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d32c1c7154980027, []int{0}
}

func (m *CipherInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CipherInfo.Unmarshal(m, b)
}
func (m *CipherInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CipherInfo.Marshal(b, m, deterministic)
}
func (m *CipherInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CipherInfo.Merge(m, src)
}
func (m *CipherInfo) XXX_Size() int {
	return xxx_messageInfo_CipherInfo.Size(m)
}
func (m *CipherInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CipherInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CipherInfo proto.InternalMessageInfo

func (m *CipherInfo) GetCAlgo() CryptoAlgorithm {
	if m != nil {
		return m.CAlgo
	}
	return CryptoAlgorithm_NONE
}

func (m *CipherInfo) GetInitialValue() []byte {
	if m != nil {
		return m.InitialValue
	}
	return nil
}

func (m *CipherInfo) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func init() {
	proto.RegisterEnum("CryptoAlgorithm", CryptoAlgorithm_name, CryptoAlgorithm_value)
	proto.RegisterType((*CipherInfo)(nil), "CipherInfo")
}

func init() { proto.RegisterFile("cipherinfo.proto", fileDescriptor_d32c1c7154980027) }

var fileDescriptor_d32c1c7154980027 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xcf, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc0, 0x71, 0xe3, 0x17, 0x3a, 0x14, 0x0d, 0x39, 0xe5, 0x20, 0x58, 0x8a, 0x4a, 0x11, 0xdc,
	0x05, 0x7d, 0x02, 0x8d, 0x45, 0x45, 0xa8, 0xd0, 0x83, 0x07, 0x6f, 0xc9, 0x64, 0xb2, 0x19, 0xd8,
	0x64, 0x96, 0x75, 0x37, 0x50, 0x9f, 0x5e, 0x9a, 0x1e, 0xc4, 0xde, 0x86, 0xdf, 0xfc, 0x19, 0x18,
	0x48, 0x91, 0x5d, 0x4b, 0x9e, 0xfb, 0x46, 0x94, 0xf3, 0x12, 0x64, 0x36, 0x00, 0x14, 0xa3, 0xbd,
	0xf5, 0x8d, 0x64, 0x37, 0x70, 0x84, 0x8f, 0xd6, 0x48, 0x9e, 0x4c, 0x93, 0xf9, 0xd9, 0x7d, 0xaa,
	0x0a, 0xbf, 0x76, 0x41, 0x36, 0xe4, 0x39, 0xb4, 0xdd, 0x6a, 0xbb, 0xce, 0x66, 0x30, 0xe1, 0x9e,
	0x03, 0x97, 0xf6, 0xb3, 0xb4, 0x91, 0xf2, 0xfd, 0x69, 0x32, 0x9f, 0xac, 0xfe, 0x59, 0x76, 0x01,
	0xa7, 0x2e, 0x56, 0x96, 0xf1, 0x9d, 0xd6, 0xf9, 0xc1, 0x18, 0xfc, 0xc1, 0xed, 0x35, 0x9c, 0xef,
	0xdc, 0xce, 0x4e, 0xe0, 0x70, 0xf9, 0xb1, 0x5c, 0xa4, 0x7b, 0x9b, 0x69, 0x51, 0x3c, 0xbf, 0xa6,
	0xc9, 0xd3, 0x0b, 0x5c, 0xa2, 0x74, 0xea, 0x87, 0x6a, 0xaa, 0x4b, 0x85, 0x56, 0x62, 0xad, 0xe2,
	0x37, 0xf9, 0x81, 0x91, 0xb6, 0x1f, 0x7c, 0x5d, 0x19, 0x0e, 0x6d, 0xac, 0x14, 0x4a, 0xa7, 0x6d,
	0x73, 0x47, 0xb5, 0x21, 0x4d, 0x03, 0xe9, 0xd2, 0xb1, 0x36, 0xa2, 0x51, 0xfa, 0x86, 0x4d, 0x75,
	0x3c, 0xc6, 0x0f, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x8c, 0x53, 0x6e, 0x02, 0x01, 0x00,
	0x00,
}
