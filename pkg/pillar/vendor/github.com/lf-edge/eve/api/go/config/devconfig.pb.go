// Code generated by protoc-gen-go. DO NOT EDIT.
// source: devconfig.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//Â This is the response to a GET /api/v1/edgeDevice/config
// The EdgeDevConfig message carries all of the device's configuration from
// the controller to the device.
// The device will request these messages either periodically or as a result
// of some TBD notification.
// The message is assumed to be protected by a TLS session bound to the
// device certificate.
type EdgeDevConfig struct {
	Id          *UUIDandVersion      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Apps        []*AppInstanceConfig `protobuf:"bytes,4,rep,name=apps,proto3" json:"apps,omitempty"`
	Networks    []*NetworkConfig     `protobuf:"bytes,5,rep,name=networks,proto3" json:"networks,omitempty"`
	Datastores  []*DatastoreConfig   `protobuf:"bytes,6,rep,name=datastores,proto3" json:"datastores,omitempty"`
	LispInfo    *DeviceLispDetails   `protobuf:"bytes,7,opt,name=lispInfo,proto3" json:"lispInfo,omitempty"`
	Base        []*BaseOSConfig      `protobuf:"bytes,8,rep,name=base,proto3" json:"base,omitempty"`
	Reboot      *DeviceOpsCmd        `protobuf:"bytes,9,opt,name=reboot,proto3" json:"reboot,omitempty"`
	Backup      *DeviceOpsCmd        `protobuf:"bytes,10,opt,name=backup,proto3" json:"backup,omitempty"`
	ConfigItems []*ConfigItem        `protobuf:"bytes,11,rep,name=configItems,proto3" json:"configItems,omitempty"`
	// systemAdapterList - List of DeviceNetworkAdapters. Only Network
	//  adapters ( Ex: eth0, wlan1 etc ) have a corresponding SystemAdapter.
	// non-Network adapters do not have systemadapters.
	SystemAdapterList []*SystemAdapter `protobuf:"bytes,12,rep,name=systemAdapterList,proto3" json:"systemAdapterList,omitempty"`
	// deviceIoList - List of Physical Adapters. Includes both Network
	//  Adapters and Non-Network Adapters ( USB / Com etc )
	DeviceIoList []*PhysicalIO `protobuf:"bytes,13,rep,name=deviceIoList,proto3" json:"deviceIoList,omitempty"`
	// Override dmidecode info if set
	Manufacturer     string                   `protobuf:"bytes,14,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	ProductName      string                   `protobuf:"bytes,15,opt,name=productName,proto3" json:"productName,omitempty"`
	NetworkInstances []*NetworkInstanceConfig `protobuf:"bytes,16,rep,name=networkInstances,proto3" json:"networkInstances,omitempty"`
	// Information saved by device to make it easier to find in the controller
	Enterprise string `protobuf:"bytes,17,opt,name=enterprise,proto3" json:"enterprise,omitempty"`
	Name       string `protobuf:"bytes,18,opt,name=name,proto3" json:"name,omitempty"`
	// Controller supplies a list of cipher contexts
	// indexed by uuid/version, containing certificate and other
	// information, to be used for sensitive data decryption
	CipherContexts       []*CipherContext `protobuf:"bytes,19,rep,name=cipherContexts,proto3" json:"cipherContexts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EdgeDevConfig) Reset()         { *m = EdgeDevConfig{} }
func (m *EdgeDevConfig) String() string { return proto.CompactTextString(m) }
func (*EdgeDevConfig) ProtoMessage()    {}
func (*EdgeDevConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{0}
}

func (m *EdgeDevConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeDevConfig.Unmarshal(m, b)
}
func (m *EdgeDevConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeDevConfig.Marshal(b, m, deterministic)
}
func (m *EdgeDevConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeDevConfig.Merge(m, src)
}
func (m *EdgeDevConfig) XXX_Size() int {
	return xxx_messageInfo_EdgeDevConfig.Size(m)
}
func (m *EdgeDevConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeDevConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeDevConfig proto.InternalMessageInfo

func (m *EdgeDevConfig) GetId() *UUIDandVersion {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *EdgeDevConfig) GetApps() []*AppInstanceConfig {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *EdgeDevConfig) GetNetworks() []*NetworkConfig {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *EdgeDevConfig) GetDatastores() []*DatastoreConfig {
	if m != nil {
		return m.Datastores
	}
	return nil
}

func (m *EdgeDevConfig) GetLispInfo() *DeviceLispDetails {
	if m != nil {
		return m.LispInfo
	}
	return nil
}

func (m *EdgeDevConfig) GetBase() []*BaseOSConfig {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *EdgeDevConfig) GetReboot() *DeviceOpsCmd {
	if m != nil {
		return m.Reboot
	}
	return nil
}

func (m *EdgeDevConfig) GetBackup() *DeviceOpsCmd {
	if m != nil {
		return m.Backup
	}
	return nil
}

func (m *EdgeDevConfig) GetConfigItems() []*ConfigItem {
	if m != nil {
		return m.ConfigItems
	}
	return nil
}

func (m *EdgeDevConfig) GetSystemAdapterList() []*SystemAdapter {
	if m != nil {
		return m.SystemAdapterList
	}
	return nil
}

func (m *EdgeDevConfig) GetDeviceIoList() []*PhysicalIO {
	if m != nil {
		return m.DeviceIoList
	}
	return nil
}

func (m *EdgeDevConfig) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *EdgeDevConfig) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *EdgeDevConfig) GetNetworkInstances() []*NetworkInstanceConfig {
	if m != nil {
		return m.NetworkInstances
	}
	return nil
}

func (m *EdgeDevConfig) GetEnterprise() string {
	if m != nil {
		return m.Enterprise
	}
	return ""
}

func (m *EdgeDevConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EdgeDevConfig) GetCipherContexts() []*CipherContext {
	if m != nil {
		return m.CipherContexts
	}
	return nil
}

type ConfigRequest struct {
	ConfigHash           string   `protobuf:"bytes,1,opt,name=configHash,proto3" json:"configHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigRequest) Reset()         { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()    {}
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{1}
}

func (m *ConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRequest.Unmarshal(m, b)
}
func (m *ConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRequest.Marshal(b, m, deterministic)
}
func (m *ConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRequest.Merge(m, src)
}
func (m *ConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigRequest.Size(m)
}
func (m *ConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRequest proto.InternalMessageInfo

func (m *ConfigRequest) GetConfigHash() string {
	if m != nil {
		return m.ConfigHash
	}
	return ""
}

type ConfigResponse struct {
	Config               *EdgeDevConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	ConfigHash           string         `protobuf:"bytes,2,opt,name=configHash,proto3" json:"configHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ConfigResponse) Reset()         { *m = ConfigResponse{} }
func (m *ConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigResponse) ProtoMessage()    {}
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc17241cd6d97458, []int{2}
}

func (m *ConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigResponse.Unmarshal(m, b)
}
func (m *ConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigResponse.Marshal(b, m, deterministic)
}
func (m *ConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigResponse.Merge(m, src)
}
func (m *ConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigResponse.Size(m)
}
func (m *ConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigResponse proto.InternalMessageInfo

func (m *ConfigResponse) GetConfig() *EdgeDevConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ConfigResponse) GetConfigHash() string {
	if m != nil {
		return m.ConfigHash
	}
	return ""
}

func init() {
	proto.RegisterType((*EdgeDevConfig)(nil), "EdgeDevConfig")
	proto.RegisterType((*ConfigRequest)(nil), "ConfigRequest")
	proto.RegisterType((*ConfigResponse)(nil), "ConfigResponse")
}

func init() { proto.RegisterFile("devconfig.proto", fileDescriptor_fc17241cd6d97458) }

var fileDescriptor_fc17241cd6d97458 = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xd1, 0x6f, 0xd3, 0x30,
	0x10, 0xc6, 0xb5, 0xd1, 0x95, 0xed, 0xba, 0x76, 0x9d, 0x91, 0x90, 0xc5, 0x03, 0x2b, 0x15, 0x4c,
	0x13, 0xd2, 0x1c, 0x34, 0x24, 0x9e, 0x78, 0xd9, 0x5a, 0x04, 0x95, 0xa6, 0x0d, 0x65, 0x1a, 0x42,
	0xbc, 0xb9, 0xf1, 0xb5, 0xb5, 0xd6, 0xd8, 0x26, 0xe7, 0x14, 0xc6, 0xbf, 0xcc, 0x3f, 0x81, 0xe2,
	0x24, 0x53, 0xda, 0xf1, 0x16, 0x7f, 0xdf, 0xcf, 0xdf, 0x39, 0x3e, 0x1f, 0x1c, 0x28, 0x5c, 0x25,
	0xd6, 0xcc, 0xf4, 0x5c, 0xb8, 0xcc, 0x7a, 0xfb, 0xa2, 0x14, 0xd2, 0xd4, 0x9a, 0x5a, 0x90, 0xce,
	0xad, 0x11, 0x6c, 0x2a, 0x09, 0x2d, 0xad, 0x69, 0xfd, 0x44, 0xbb, 0x05, 0x66, 0xda, 0xcc, 0x6c,
	0xbd, 0xcd, 0xa0, 0x5f, 0x43, 0xba, 0xe4, 0x6d, 0x26, 0xe7, 0x58, 0x2f, 0x0d, 0x7a, 0x6d, 0xc8,
	0x57, 0x4b, 0x48, 0x91, 0x16, 0xd5, 0x77, 0x4f, 0xe1, 0x2a, 0xb5, 0x0a, 0x97, 0xe5, 0x7a, 0xf8,
	0x77, 0x07, 0xba, 0x9f, 0xd4, 0x1c, 0xc7, 0xb8, 0x1a, 0x85, 0x44, 0x76, 0x04, 0xdb, 0x5a, 0xf1,
	0xad, 0xc1, 0xd6, 0x49, 0xe7, 0xec, 0x40, 0xdc, 0xde, 0x4e, 0xc6, 0xd2, 0xa8, 0x6f, 0x98, 0x91,
	0xb6, 0x26, 0xde, 0xd6, 0x8a, 0x1d, 0x43, 0x4b, 0x3a, 0x47, 0xbc, 0x35, 0x78, 0x72, 0xd2, 0x39,
	0x63, 0xe2, 0xdc, 0xb9, 0x89, 0x21, 0x2f, 0x4d, 0x82, 0x65, 0x44, 0x1c, 0x7c, 0xf6, 0x16, 0x76,
	0x0d, 0xfa, 0x5f, 0x36, 0xbb, 0x23, 0xbe, 0x13, 0xd8, 0x9e, 0xb8, 0x2a, 0x85, 0x8a, 0x7b, 0xf0,
	0xd9, 0x3b, 0x00, 0x25, 0xbd, 0x2c, 0x7e, 0x03, 0x89, 0xb7, 0x03, 0xdd, 0x17, 0xe3, 0x5a, 0xaa,
	0xf8, 0x06, 0xc3, 0x04, 0xec, 0x2e, 0x35, 0xb9, 0x89, 0x99, 0x59, 0xfe, 0x34, 0x1c, 0x96, 0x89,
	0x31, 0xae, 0x74, 0x82, 0x97, 0x9a, 0xdc, 0x18, 0xbd, 0xd4, 0x4b, 0x8a, 0x1f, 0x18, 0xf6, 0x0a,
	0x5a, 0xc5, 0xdd, 0xf2, 0xdd, 0x90, 0xdd, 0x15, 0x17, 0x92, 0xf0, 0xfa, 0xa6, 0x3e, 0x70, 0x61,
	0xb1, 0x37, 0xd0, 0xce, 0x70, 0x6a, 0xad, 0xe7, 0x7b, 0x21, 0xb0, 0x5b, 0x05, 0x5e, 0x3b, 0x1a,
	0xa5, 0x2a, 0xae, 0xcc, 0x02, 0x9b, 0xca, 0xe4, 0x2e, 0x77, 0x1c, 0xfe, 0x8b, 0x95, 0x26, 0x3b,
	0x85, 0x4e, 0xd9, 0xa3, 0x89, 0xc7, 0x94, 0x78, 0x27, 0xd4, 0xed, 0x88, 0xd1, 0x83, 0x16, 0x37,
	0x7d, 0xf6, 0x11, 0x0e, 0xe9, 0x9e, 0x3c, 0xa6, 0xe7, 0x4a, 0x3a, 0x8f, 0xd9, 0xa5, 0x26, 0xcf,
	0xf7, 0xab, 0x6b, 0xbb, 0x69, 0x3a, 0xf1, 0x63, 0x90, 0x45, 0xb0, 0xaf, 0xc2, 0x21, 0x26, 0x36,
	0x6c, 0xec, 0x56, 0xd5, 0xbe, 0x2e, 0xee, 0x49, 0x27, 0x72, 0x39, 0xb9, 0x8e, 0xd7, 0x00, 0x36,
	0x84, 0xfd, 0x54, 0x9a, 0x7c, 0x26, 0x13, 0x9f, 0x67, 0x98, 0xf1, 0xde, 0x60, 0xeb, 0x64, 0x2f,
	0x5e, 0xd3, 0xd8, 0x00, 0x3a, 0x2e, 0xb3, 0x2a, 0x4f, 0xfc, 0x95, 0x4c, 0x91, 0x1f, 0x04, 0xa4,
	0x29, 0xb1, 0x0b, 0xe8, 0x57, 0x2d, 0xac, 0x5f, 0x00, 0xf1, 0x7e, 0x28, 0xfd, 0xbc, 0x6e, 0xf5,
	0xc6, 0xd3, 0x78, 0xc4, 0xb3, 0x97, 0x00, 0x68, 0x3c, 0x66, 0x2e, 0xd3, 0x84, 0xfc, 0x30, 0x14,
	0x69, 0x28, 0x8c, 0x41, 0xcb, 0x14, 0xe5, 0x59, 0x70, 0xc2, 0x37, 0xfb, 0x00, 0xbd, 0x72, 0x28,
	0x46, 0xd6, 0x78, 0xfc, 0xed, 0x89, 0x3f, 0xab, 0x6e, 0x6a, 0xd4, 0x94, 0xe3, 0x0d, 0x6a, 0x18,
	0x41, 0xb7, 0x3a, 0x07, 0xfe, 0xcc, 0x91, 0x7c, 0x51, 0xbc, 0x6c, 0xc2, 0x17, 0x49, 0x8b, 0xf0,
	0xe8, 0xf7, 0xe2, 0x86, 0x32, 0xfc, 0x0e, 0xbd, 0x7a, 0x03, 0x39, 0x6b, 0x08, 0xd9, 0x31, 0xb4,
	0x4b, 0xbf, 0x1a, 0x91, 0x9e, 0x58, 0x1b, 0x9f, 0xb8, 0x72, 0x37, 0x92, 0xb7, 0x37, 0x93, 0x2f,
	0x3e, 0xc3, 0x51, 0x62, 0x53, 0xf1, 0x07, 0x15, 0x2a, 0x29, 0x92, 0xa5, 0xcd, 0x95, 0xc8, 0x09,
	0xb3, 0xa2, 0x47, 0xe5, 0x6c, 0xfe, 0x78, 0x3d, 0xd7, 0x7e, 0x91, 0x4f, 0x45, 0x62, 0xd3, 0x68,
	0x39, 0x3b, 0x45, 0x35, 0xc7, 0x08, 0x57, 0x18, 0x49, 0xa7, 0xa3, 0xb9, 0x8d, 0xca, 0xb0, 0x69,
	0x3b, 0xc0, 0xef, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xc0, 0xef, 0x27, 0xc3, 0x6e, 0x04, 0x00,
	0x00,
}
