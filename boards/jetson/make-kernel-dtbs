#!/bin/bash
#########################################################
KERNEL_VERSION=$1
KERNEL_MAJOR="$(echo "$KERNEL_VERSION" | cut -f1 -d.)"
#KERNEL_SERIES=$(eval echo \\$KERNEL_VERSION | sed -e 's#.[^.]*$#.x#')
KERNEL_SOURCE="https://www.kernel.org/pub/linux/kernel/v${KERNEL_MAJOR}.x/linux-${KERNEL_VERSION}.tar.xz"
#########################################################
SCRIPT_HOME="$PWD"

function cleanup() {
  set +e
  rm -rf "$SCRIPT_HOME"/linux/src
}
trap cleanup EXIT

mkdir -p "$SCRIPT_HOME"/linux
rm -rf "$SCRIPT_HOME"/linux/src

[ -f linux/linux-"$KERNEL_VERSION".tar.xz ] || curl -o linux/linux-"$KERNEL_VERSION".tar.xz -fsSLO "$KERNEL_SOURCE" && \
tar xf linux/linux-"$KERNEL_VERSION".tar.xz -C "$SCRIPT_HOME"/linux/ && \
rm -rf linux/linux-"$KERNEL_VERSION".tar.xz && mv "$SCRIPT_HOME"/linux/linux* "$SCRIPT_HOME"/linux/src

if [ "$(uname -m)" = x86_64 ]; then
    "$SCRIPT_HOME"/get-gcc
    export CROSS_COMPILE="$SCRIPT_HOME"/gcc/bin/aarch64-linux-gnu-
    export ARCH=arm64
fi

make -C linux/src -j "$(getconf _NPROCESSORS_ONLN)" defconfig
make -C linux/src -j "$(getconf _NPROCESSORS_ONLN)" dtbs

# Jetson nano 4GB ram dtb
cp linux/src/arch/arm64/boot/dts/nvidia/tegra210-p3450-0000.dtb BSP/t210/Linux_for_Tegra/kernel/dtb/tegra210-p3448-0000-p3449-0000-b00.dtb